/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.22'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

apply from:   "./libs.gradle"

allprojects {
    apply plugin: "java"
    apply plugin: "eclipse-wtp"
    apply plugin: "eclipse"
    apply plugin: "idea"
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        flatDir { dirs "../lib" }   
    }
}
subprojects { subProject ->
    apply plugin: "java"
    group = ""
    version = ""
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava, javadoc, compileTestJava]*.options*.encoding = "UTF-8"
    
    configurations{
        provided
        all*.exclude group: "org.slf4j", module:"slf4j-log4j12"
        all*.exclude group: "org.slf4j", module:"log4j-over-slf4j"
		all*.exclude group: "ch.qos.logback", module:"logback-core"
		all*.exclude group: "ch.qos.logback", module:"logback-classic"
		all*.exclude group: "log4j", module:"log4j"
    }

    configurations.all{
        resolutionStrategy.cacheChangingModulesFor 10,'seconds'
    }

    dependencies {      
		compile ( libraries.log4j_core )
		compile ( libraries.log4j_api )		
		compile ( libraries.log4j_slf4j_impl )
		compile ( libraries.slf4j_jcl_over_slf4j )		
		compile ( libraries.log4j_1_2_api )	
        testCompile ( libraries.spring_test )
    }   

    idea {
        module {
            jdkName = subProject.sourceCompatibility
            excludeDirs = [file(".gradle")]
        }
    }
    eclipse {
        jdt {
            sourceCompatibility = subProject.sourceCompatibility
            targetCompatibility = subProject.targetCompatibility
        }
    }

    task deploy(type: Copy){
        dependsOn build
        from configurations.runtime - configurations.provided
        into 'build/libs/libs'
    }
}

// 自定义任务
//def createDir = {
//    path ->
//        File dir = new File(path);
//        if (!dir.exists()){
//            dir.mkdirs()
//        }
//}
//
// def makeJavaDir(){
//     def paths = ['src/main/java','src/main/resources','src/test/java','src/test/resources']
//     doFirst{
//         paths.forEach(createDir);
//     }
// }